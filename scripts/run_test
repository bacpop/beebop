set -e

NETWORK=beebop_nw
VOLUME=beebop-storage
NAME_REDIS=beebop-redis
NAME_API=beebop-py-api
API_BRANCH=bacpop-39
NAME_WORKER=beebop-py-worker
PORT=5000

docker volume create $VOLUME
docker run --rm -v $VOLUME:/beebop/storage mrcide/beebop-py:$API_BRANCH \
       ./scripts/download_db --small storage
docker network create $NETWORK > /dev/null || /bin/true

docker run -d --rm --name $NAME_REDIS --network=$NETWORK redis:5.0
docker run -d --rm --name $NAME_WORKER --network=$NETWORK \
       --env=REDIS_HOST="$NAME_REDIS" \
       -v $VOLUME:/beebop/storage \
       mrcide/beebop-py:$API_BRANCH rqworker
docker run -d --rm --name $NAME_API --network=$NETWORK \
       --env=REDIS_HOST="$NAME_REDIS" \
       --env=STORAGE_LOCATION="./storage" \
       --env=DB_LOCATION="./storage/GPS_v4_references" \
       -v $VOLUME:/beebop/storage \
       -p $PORT:5000 \
       mrcide/beebop-py:$API_BRANCH

npm --prefix app/server install
npm --prefix app/client install
npm install pm2

# From now on, if the user presses Ctrl+C we should teardown
function cleanup() {
    docker stop $NAME_REDIS $NAME_WORKER $NAME_API
    pm2 delete beebop_client
    pm2 delete beebop_server

}
trap cleanup INT
trap cleanup ERR

node ./node_modules/pm2/bin/pm2 --name beebop_server start "BEEBOP_TEST="true" npm run --prefix app/server express"
node ./node_modules/pm2/bin/pm2 --name beebop_client start "npm run --prefix app/client serve"
